# -*- coding: utf-8 -*-
"""Stock Picking.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/19dGkaaA-9SBFF49EuPKHEPG2Ze5EdTpu
"""

pip install -U groq agno duckduckgo-search

import os
if "GROQ_API_KEY" not in os.environ:
    os.environ["GROQ_API_KEY"] ='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'

from agno.agent import Agent
from agno.models.groq import Groq
from agno.tools.duckduckgo import DuckDuckGoTools

# Initialize the agent with an LLM via Groq and DuckDuckGoTools
agent = Agent(
    model=Groq(id="llama-3.3-70b-versatile"),
    description="You are an enthusiastic news reporter with a flair for storytelling!",
    tools=[DuckDuckGoTools()],      # Add DuckDuckGo tool to search the web
    show_tool_calls=True,           # Shows tool calls in the response, set to False to hide
    markdown=True                   # Format responses in markdown
)

# Prompt the agent to fetch a breaking news story from New York
agent.print_response("Tell me about a breaking news story from New Delhi,India.", stream=True)

from agno.agent import Agent
from agno.models.groq import Groq
from agno.tools.duckduckgo import DuckDuckGoTools

from agno.agent import Agent
from agno.models.groq import Groq
from agno.tools.duckduckgo import DuckDuckGoTools
from agno.tools.yfinance import YFinanceTools

web_agent = Agent(
    name="Web Agent",
    role="Search the web for information",
    model=Groq(id="llama-3.3-70b-versatile"),
    tools=[DuckDuckGoTools()],
    instructions="Always include sources",
    markdown=True,
)

finance_agent = Agent(
    name="Finance Agent",
    role="Get financial data",
    model=Groq(id="llama-3.3-70b-versatile"),
    tools=[YFinanceTools(stock_price=True, analyst_recommendations=True, company_info=True)],
    instructions="Use tables to display data",
    markdown=True,
)

agent_team = Agent(
    team=[web_agent, finance_agent],
    model=Groq(id="llama-3.3-70b-versatile"),  # You can use a different model for the team leader agent
    instructions=["Always include sources", "Use tables to display data"],
    # show_tool_calls=True,  # Uncomment to see tool calls in the response
    markdown=True,
)

agent_team.print_response(''' You are a financial analyst specializing in the Indian stock market.

Identify and recommend the top 3 publicly listed Indian stocks in the Electric Vehicle (EV) sector that are best suited for investment as of today.
Evaluate each stock based on the following criteria:

Direct involvement in the EV sector ‚Äì including electric vehicle manufacturing, battery production, charging infrastructure, or key EV components.

Recent financial performance ‚Äì such as revenue growth, profit margin, earnings per share, and return on equity.

Future growth potential ‚Äì projected demand, scalability, and strategic business plans or partnerships.

Market sentiment and recent news ‚Äì include mergers, government policies, subsidies, or any other impactful updates from the last 3 months.

Valuation metrics ‚Äì including current stock price, price-to-earnings (P/E) ratio, and market capitalization.

Competitive advantage ‚Äì technology, patents, supply chain strength, or brand trust.

Long-term potential (3‚Äì5 years) ‚Äì sustainability, R&D investment, and policy support in India‚Äôs EV roadmap.

Output a ranked list of the top 3 stocks with the following for each:

Company Name
Sector/Sub-sector (e.g., EV manufacturer, battery supplier)
Key reason for inclusion

Notable financials (P/E ratio, ROE, revenue growth)

Recent news highlights (if any)

Summary investment outlook (1‚Äì2 lines)

Only include companies listed on the NSE/BSE, and exclude penny stocks (below ‚Çπ50). Focus on stocks with market cap over ‚Çπ10,000 Cr."
''', stream=True)

pip install streamlit

# app.py

import streamlit as st
from agno.agent import Agent
from agno.models.groq import Groq
from agno.tools.duckduckgo import DuckDuckGoTools
from agno.tools.yfinance import YFinanceTools

# Setup agents
web_agent = Agent(
    name="Web Agent",
    role="Search the web for information",
    model=Groq(id="llama-3.3-70b-versatile"),
    tools=[DuckDuckGoTools()],
    instructions="Always include sources",
    markdown=True,
)

finance_agent = Agent(
    name="Finance Agent",
    role="Get financial data",
    model=Groq(id="llama-3.3-70b-versatile"),
    tools=[YFinanceTools(stock_price=True, analyst_recommendations=True, company_info=True)],
    instructions="Use tables to display data",
    markdown=True,
)

agent_team = Agent(
    team=[web_agent, finance_agent],
    model=Groq(id="llama-3.3-70b-versatile"),
    instructions=["Always include sources", "Use tables to display data"],
    markdown=True,
)

# Streamlit UI
st.set_page_config(page_title="EV Stock Analyst", layout="wide")
st.title("üîç EV Sector Stock Advisor ‚Äì Powered by Groq + Agno Agents")

st.markdown("Enter your query below to get insights on Indian EV sector stocks:")

default_prompt = """You are a financial analyst specializing in the Indian stock market.

Identify and recommend the top 3 publicly listed Indian stocks in the Electric Vehicle (EV) sector that are best suited for investment as of today.
Evaluate each stock based on the following criteria:

Direct involvement in the EV sector ‚Äì including electric vehicle manufacturing, battery production, charging infrastructure, or key EV components.

Recent financial performance ‚Äì such as revenue growth, profit margin, earnings per share, and return on equity.

Future growth potential ‚Äì projected demand, scalability, and strategic business plans or partnerships.

Market sentiment and recent news ‚Äì include mergers, government policies, subsidies, or any other impactful updates from the last 3 months.

Valuation metrics ‚Äì including current stock price, price-to-earnings (P/E) ratio, and market capitalization.

Competitive advantage ‚Äì technology, patents, supply chain strength, or brand trust.

Long-term potential (3‚Äì5 years) ‚Äì sustainability, R&D investment, and policy support in India‚Äôs EV roadmap.

Output a ranked list of the top 3 stocks with the following for each:

Company Name
Sector/Sub-sector (e.g., EV manufacturer, battery supplier)
Key reason for inclusion

Notable financials (P/E ratio, ROE, revenue growth)

Recent news highlights (if any)

Summary investment outlook (1‚Äì2 lines)

Only include companies listed on the NSE/BSE, and exclude penny stocks (below ‚Çπ50). Focus on stocks with market cap over ‚Çπ10,000 Cr."""

user_prompt = st.text_area("üì© Prompt", value=default_prompt, height=400)

if st.button("üîé Analyze Stocks"):
    with st.spinner("Analyzing with multi-agent team..."):
        response = agent_team.run(user_prompt)
        st.markdown(response)  # This will render Markdown tables and links if returned

code = '''
from agno.agent import Agent
from agno.models.groq import Groq
from agno.tools.duckduckgo import DuckDuckGoTools
from agno.tools.yfinance import YFinanceTools
import streamlit as st

# Setup agents
web_agent = Agent(
    name="Web Agent",
    role="Search the web for information",
    model=Groq(id="llama-3.3-70b-versatile"),
    tools=[DuckDuckGoTools()],
    instructions="Always include sources",
    markdown=True,
)

finance_agent = Agent(
    name="Finance Agent",
    role="Get financial data",
    model=Groq(id="llama-3.3-70b-versatile"),
    tools=[YFinanceTools(stock_price=True, analyst_recommendations=True, company_info=True)],
    instructions="Use tables to display data",
    markdown=True,
)

agent_team = Agent(
    team=[web_agent, finance_agent],
    model=Groq(id="llama-3.3-70b-versatile"),
    instructions=["Always include sources", "Use tables to display data"],
    markdown=True,
)

# Streamlit UI
st.set_page_config(page_title="EV Stock Analyst", layout="wide")
st.title("üîç EV Sector Stock Advisor ‚Äì Powered by Groq + Agno Agents")

st.markdown("Enter your query below to get insights on Indian EV sector stocks:")

default_prompt = """You are a financial analyst specializing in the Indian stock market.

Identify and recommend the top 3 publicly listed Indian stocks in the Electric Vehicle (EV) sector that are best suited for investment as of today.
Evaluate each stock based on the following criteria:

Direct involvement in the EV sector ‚Äì including electric vehicle manufacturing, battery production, charging infrastructure, or key EV components.

Recent financial performance ‚Äì such as revenue growth, profit margin, earnings per share, and return on equity.

Future growth potential ‚Äì projected demand, scalability, and strategic business plans or partnerships.

Market sentiment and recent news ‚Äì include mergers, government policies, subsidies, or any other impactful updates from the last 3 months.

Valuation metrics ‚Äì including current stock price, price-to-earnings (P/E) ratio, and market capitalization.

Competitive advantage ‚Äì technology, patents, supply chain strength, or brand trust.

Long-term potential (3‚Äì5 years) ‚Äì sustainability, R&D investment, and policy support in India‚Äôs EV roadmap.

Output a ranked list of the top 3 stocks with the following for each:

Company Name
Sector/Sub-sector (e.g., EV manufacturer, battery supplier)
Key reason for inclusion

Notable financials (P/E ratio, ROE, revenue growth)

Recent news highlights (if any)

Summary investment outlook (1‚Äì2 lines)

Only include companies listed on the NSE/BSE, and exclude penny stocks (below ‚Çπ50). Focus on stocks with market cap over ‚Çπ10,000 Cr."""

user_prompt = st.text_area("üì© Prompt", value=default_prompt, height=400)

if st.button("üîé Analyze Stocks"):
    with st.spinner("Analyzing with multi-agent team..."):
        response = agent_team.run(user_prompt)
        st.markdown(response)
'''
with open("app.py", "w") as f:
    f.write(code)

!pip install streamlit agno pyngrok

import os
os.environ["GROQ_API_KEY"] = "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"

!ngrok config add-authtoken 305jsPim2XswrSPtIZAAAU65qNS_7GUb96XPsXCAtSwAq9FWs

from pyngrok import ngrok

ngrok.kill()  # Clean any previous tunnels
public_url = ngrok.connect(port=8501)
print(f"‚úÖ Streamlit app is live at: {public_url}")

!streamlit run app.py &> streamlit.log &